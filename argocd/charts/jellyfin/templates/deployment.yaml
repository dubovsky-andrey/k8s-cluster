apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jellyfin.fullname" . }}
  labels:
    app: {{ include "jellyfin.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "jellyfin.name" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ include "jellyfin.name" . }}
    spec:
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ include "jellyfin.name" . }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ include "jellyfin.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
          env:
            - name: TZ
              value: "{{ .Values.env.TZ }}"
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
            capabilities:
              drop:
                - ALL
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: jellyfin-config
              mountPath: /config
            - name: jellyfin-movies
              mountPath: /movies
            - name: jellyfin-tv
              mountPath: /tv
      tolerations:
      - key: "node-role.kubernetes.io/gpu"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      {{- if .Values.persistence.enabled }}
      
      volumes:
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: {{ include "jellyfin.fullname" . }}-pvc
        - name: jellyfin-movies
          persistentVolumeClaim:
            claimName: jellyfin-cifs-movies-pvc
        - name: jellyfin-tv
          persistentVolumeClaim:
            claimName: jellyfin-cifs-tv-pvc
      {{- end }}
